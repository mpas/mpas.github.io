<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>testing on Marco Pas</title>
    <link>https://mpas.github.io/tags/testing/</link>
    <description>Recent content in testing on Marco Pas</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 19 Nov 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://mpas.github.io/tags/testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Functional Rest API Testing with Grails/Rest Client Builder</title>
      <link>https://mpas.github.io/posts/2015/11/19/20151119-functional-rest-api-testing/</link>
      <pubDate>Thu, 19 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://mpas.github.io/posts/2015/11/19/20151119-functional-rest-api-testing/</guid>
      <description>Functional Rest API testing with Grails is easy and fun. We will be creating a simple Rest Controller and test it using Spock and Rest Client Builder.
When running the functional test a real container will be started on a specific port and tests are run against the running container. Just as it should be.
Scenario: Performing a GET request on a url (http://localhost:8080/helloworld) should return a HTTP Status 200 and data with a json payload</description>
    </item>
    
    <item>
      <title>Funcional Code Coverage using Cobertura</title>
      <link>https://mpas.github.io/posts/2012/09/10/20120910-functional-code-coverage-using-cobertura/</link>
      <pubDate>Mon, 10 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>https://mpas.github.io/posts/2012/09/10/20120910-functional-code-coverage-using-cobertura/</guid>
      <description>So assume you are assigned to a JEE/Web project with no written functional requirements, no technical design, no functional and unit tests and even no business process description. Sounds really hopeless, but it is your responsibility to learn the system and make adjustments to it. Does this sound familiar?? Hopefully not :) But every now and then this scenario seems to happen.
One can start to complain :), stop working on the project or even better master the concept of Software Archeology.</description>
    </item>
    
  </channel>
</rss>
