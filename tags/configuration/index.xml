<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>configuration on CodeVerse</title>
    <link>http://mpas.github.io/tags/configuration/</link>
    <description>Recent content in configuration on CodeVerse</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Sep 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://mpas.github.io/tags/configuration/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Loading Grails configuration files update!</title>
      <link>http://mpas.github.io/post/2012/09/17/20120917-grails-load-external-configuration-files-update/</link>
      <pubDate>Mon, 17 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>http://mpas.github.io/post/2012/09/17/20120917-grails-load-external-configuration-files-update/</guid>
      <description>We recently changed the way how we load configuration files in a Grails project. Normally we to use the .properties file format, but this has some serious disadvantages.
 You cannot deal with all Grails Mail settings in the configuration file You cannot use the log4j DSL to extract the logging configuration outside your application etc..  In our hunt for a good way to load configuration files we asked question on the mailinglist and also found this blogpost which was the start for our implementation of loading the external configuration files.</description>
    </item>
    
    <item>
      <title>Loading external Configuration files in a Grails application</title>
      <link>http://mpas.github.io/post/2012/09/16/20120916-grails-load-external-configuration-files/</link>
      <pubDate>Sun, 16 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>http://mpas.github.io/post/2012/09/16/20120916-grails-load-external-configuration-files/</guid>
      <description>The use of &amp;lsquo;Config.groovy&amp;rsquo; as a placeholder for configuration settings is nice, but not always sufficient. The &amp;lsquo;Config.groovy&amp;rsquo; file will get compiled and packaged inside the WAR file you are creating. If you want to externalize the configuration and have a need to configure settings outside the deployed (WAR file) application you can use property files (.properties) to achieve that.
A simple mechanism to load these property files is to place a short snippet of code in the &amp;lsquo;Config.</description>
    </item>
    
  </channel>
</rss>