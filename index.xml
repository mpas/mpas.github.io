<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Recent Content on CodeVerse </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://mpas.github.io/index.xml</link>
    
    
    
    <updated>Thu, 01 Jan 2015 00:00:00 UTC</updated>
    
    <item>
      <title>About</title>
      <link>http://mpas.github.io/page/about</link>
      <pubDate>Thu, 01 Jan 2015 00:00:00 UTC</pubDate>
      
      <guid>http://mpas.github.io/page/about</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque rhoncus hendrerit venenatis. Vivamus tempus dui eu magna interdum, sed lobortis metus elementum. Vivamus eu est pretium, congue turpis eget, luctus augue. Vivamus sed dignissim risus, quis scelerisque purus. Sed feugiat justo at orci porttitor, at porta nunc egestas. Maecenas malesuada vitae mauris et lobortis. Vivamus consequat dictum lobortis.&lt;/p&gt;

&lt;p&gt;Nulla nec gravida purus. Nullam a diam id erat vehicula imperdiet. Vivamus eget dignissim magna, in vulputate magna. Quisque condimentum pretium ligula, at sollicitudin dolor facilisis nec. Nullam at ultrices risus, nec ultricies ligula. Duis convallis commodo vestibulum. Donec mi ligula, blandit quis cursus eget, dictum quis ante. Proin nec tincidunt ipsum. Ut id urna dolor. Nunc fringilla velit urna, quis aliquet erat pellentesque in. Vivamus lacinia elementum diam, quis laoreet dolor blandit nec. Nam ut urna id dolor ultricies lacinia nec at neque. Donec porta consequat convallis.&lt;/p&gt;

&lt;p&gt;Phasellus vitae magna vel dolor posuere scelerisque in quis nulla. Nunc vel sapien vel tellus commodo placerat. Morbi non egestas diam, ac condimentum orci. Morbi rutrum nulla mi, non fringilla leo consectetur eget. Nulla vestibulum, lectus non iaculis hendrerit, orci dolor congue nibh, nec commodo velit sapien vitae urna. Nam nisl lacus, tristique eget libero ac, commodo lobortis ante. Cras cursus malesuada nulla, nec eleifend ligula consequat eu. Nullam varius augue sit amet ipsum mollis, in viverra massa varius. Sed a orci commodo, ornare justo gravida, venenatis est. Morbi bibendum nunc dui, ac tincidunt orci mollis sed. Cras nec erat non metus dignissim euismod. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Nunc sit amet dui at metus posuere volutpat. Nunc id faucibus nisi.&lt;/p&gt;

&lt;p&gt;Morbi pharetra viverra nisl, sed imperdiet urna consequat aliquam. In euismod, quam a consectetur imperdiet, diam ante sollicitudin augue, ac sollicitudin urna lorem quis libero. In id luctus tortor, et auctor enim. Maecenas tincidunt placerat tincidunt. Morbi tortor ligula, congue sit amet vulputate nec, porttitor quis libero. Quisque imperdiet pretium viverra. Praesent non odio turpis. In fringilla a enim quis accumsan. Pellentesque id porttitor magna. Curabitur tincidunt purus turpis, accumsan mollis metus dignissim ac. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Fusce malesuada leo nec est tincidunt semper.&lt;/p&gt;

&lt;p&gt;Donec elementum neque vel ligula blandit, ut semper metus vulputate. Integer vulputate, neque vel aliquet suscipit, elit arcu mattis dui, fermentum venenatis mi mauris non risus. Curabitur at metus non urna condimentum pharetra. Phasellus facilisis odio vestibulum leo sodales, sed fermentum turpis interdum. Vestibulum faucibus venenatis nisl, eu laoreet odio tempor in. In accumsan metus tortor, sit amet imperdiet ante mollis at. Cras lacinia mi leo, eu sollicitudin est convallis quis. Integer congue leo vitae fermentum posuere. Curabitur posuere, est sed condimentum tristique, sem nibh consequat ligula, at vestibulum dui nisi nec ante. Duis porta nisi sit amet nunc viverra, quis tincidunt tellus faucibus.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>http://mpas.github.io/page/resume</link>
      <pubDate>Thu, 01 Jan 2015 00:00:00 UTC</pubDate>
      
      <guid>http://mpas.github.io/page/resume</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque rhoncus hendrerit venenatis. Vivamus tempus dui eu magna interdum, sed lobortis metus elementum. Vivamus eu est pretium, congue turpis eget, luctus augue. Vivamus sed dignissim risus, quis scelerisque purus. Sed feugiat justo at orci porttitor, at porta nunc egestas. Maecenas malesuada vitae mauris et lobortis. Vivamus consequat dictum lobortis.&lt;/p&gt;

&lt;p&gt;Nulla nec gravida purus. Nullam a diam id erat vehicula imperdiet. Vivamus eget dignissim magna, in vulputate magna. Quisque condimentum pretium ligula, at sollicitudin dolor facilisis nec. Nullam at ultrices risus, nec ultricies ligula. Duis convallis commodo vestibulum. Donec mi ligula, blandit quis cursus eget, dictum quis ante. Proin nec tincidunt ipsum. Ut id urna dolor. Nunc fringilla velit urna, quis aliquet erat pellentesque in. Vivamus lacinia elementum diam, quis laoreet dolor blandit nec. Nam ut urna id dolor ultricies lacinia nec at neque. Donec porta consequat convallis.&lt;/p&gt;

&lt;p&gt;Phasellus vitae magna vel dolor posuere scelerisque in quis nulla. Nunc vel sapien vel tellus commodo placerat. Morbi non egestas diam, ac condimentum orci. Morbi rutrum nulla mi, non fringilla leo consectetur eget. Nulla vestibulum, lectus non iaculis hendrerit, orci dolor congue nibh, nec commodo velit sapien vitae urna. Nam nisl lacus, tristique eget libero ac, commodo lobortis ante. Cras cursus malesuada nulla, nec eleifend ligula consequat eu. Nullam varius augue sit amet ipsum mollis, in viverra massa varius. Sed a orci commodo, ornare justo gravida, venenatis est. Morbi bibendum nunc dui, ac tincidunt orci mollis sed. Cras nec erat non metus dignissim euismod. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Nunc sit amet dui at metus posuere volutpat. Nunc id faucibus nisi.&lt;/p&gt;

&lt;p&gt;Morbi pharetra viverra nisl, sed imperdiet urna consequat aliquam. In euismod, quam a consectetur imperdiet, diam ante sollicitudin augue, ac sollicitudin urna lorem quis libero. In id luctus tortor, et auctor enim. Maecenas tincidunt placerat tincidunt. Morbi tortor ligula, congue sit amet vulputate nec, porttitor quis libero. Quisque imperdiet pretium viverra. Praesent non odio turpis. In fringilla a enim quis accumsan. Pellentesque id porttitor magna. Curabitur tincidunt purus turpis, accumsan mollis metus dignissim ac. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Fusce malesuada leo nec est tincidunt semper.&lt;/p&gt;

&lt;p&gt;Donec elementum neque vel ligula blandit, ut semper metus vulputate. Integer vulputate, neque vel aliquet suscipit, elit arcu mattis dui, fermentum venenatis mi mauris non risus. Curabitur at metus non urna condimentum pharetra. Phasellus facilisis odio vestibulum leo sodales, sed fermentum turpis interdum. Vestibulum faucibus venenatis nisl, eu laoreet odio tempor in. In accumsan metus tortor, sit amet imperdiet ante mollis at. Cras lacinia mi leo, eu sollicitudin est convallis quis. Integer congue leo vitae fermentum posuere. Curabitur posuere, est sed condimentum tristique, sem nibh consequat ligula, at vestibulum dui nisi nec ante. Duis porta nisi sit amet nunc viverra, quis tincidunt tellus faucibus.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Upgrading from Grails 2.3.8 to 2.4.2</title>
      <link>http://mpas.github.io/post/2014/07/upgrade-grails-2.4.2</link>
      <pubDate>Fri, 04 Jul 2014 00:00:00 UTC</pubDate>
      
      <guid>http://mpas.github.io/post/2014/07/upgrade-grails-2.4.2</guid>
      <description>&lt;p&gt;When upgrading to Grails 2.4.2 i ran into an issue where the following error message would pop up.&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;Error creating bean with name &amp;#39;grailsApplication&amp;#39; defined in ServletContext resource [/WEB-INF/applicationContext.xml]: Cannot resolve reference to bean &amp;#39;grailsResourceLoader&amp;#39; while setting bean property &amp;#39;grailsResourceLoader&amp;#39;;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To solve this issue you need to delete some lines in the &lt;code&gt;&amp;lt;grails-app&amp;gt;/web-app/WEB-INF/applicationContext.xml&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Delete the following lines:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;property name=&amp;quot;grailsResourceLoader&amp;quot; ref=&amp;quot;grailsResourceLoader&amp;quot; /&amp;gt;

&amp;lt;bean id=&amp;quot;grailsResourceLoader&amp;quot; class=&amp;quot;org.codehaus.groovy.grails.commons.GrailsResourceLoaderFactoryBean&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And you should be up and running quickly.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Skip a contenttype/section to be renderend</title>
      <link>http://mpas.github.io/post/2014/06/hugo-skip-certain-content-to-be-rendered</link>
      <pubDate>Mon, 09 Jun 2014 00:00:00 UTC</pubDate>
      
      <guid>http://mpas.github.io/post/2014/06/hugo-skip-certain-content-to-be-rendered</guid>
      <description>&lt;p&gt;When creating a layout it may occur that you want to skip rendering certain types of content, or render only specific content in a part of your layout.&lt;/p&gt;

&lt;p&gt;Example:
You want to only render contenttype &amp;lsquo;post&amp;rsquo;  use the following code in your template:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{{ if eq .Type &amp;quot;post&amp;quot; }} 

    {{ .Title }}
    {{ .Content }}

{{ end }}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Bookreview : Instant Vert.x</title>
      <link>http://mpas.github.io/post/2013/11/bookreview-instant-vertx</link>
      <pubDate>Wed, 27 Nov 2013 00:00:00 UTC</pubDate>
      
      <guid>http://mpas.github.io/post/2013/11/bookreview-instant-vertx</guid>
      <description>&lt;p&gt;For those who have not yet got into contact with &lt;a href=&#34;http://vertx.io/&#34;&gt;Vert.x&lt;/a&gt;, the book &lt;a href=&#34;http://www.packtpub.com/development-of-asynchronous-network-applications-using-vertx/book&#34;&gt;Instant Vert.x&lt;/a&gt; (54 pages in total of which 40 pages are “real” content) is a nice introduction to the underlying concepts.&lt;/p&gt;

&lt;p&gt;As the name suggests, you can read the book in &amp;ldquo;an instant&amp;rdquo; and takes the reader through all high level concepts. The information in the book mostly stays at the concept level and provides some basic usage examples.&lt;/p&gt;

&lt;p&gt;For those who have not yet had the opportunity to learn about Vert.x, I would not immediately recommend this book. The online documentation section on Vertx.io contains the same information. But if you like a book with information nicely put into digestible chapters then this book is a good fit.&lt;/p&gt;

&lt;p&gt;Personally i hoped to get some more technical information and how-to information from this book but it is really targeted towards people that are just starting or have a beginning interest in Vert.x.&lt;/p&gt;

&lt;p&gt;Overall, I really liked the compactness and pace of the book. It is an easy read and you quickly gain knowledge on the high level concepts of Vert.x. While noted earlier you can get the information also on Vertx.io website or other places, it&amp;rsquo;s is nice to have all information aggregated in one place. This book is a good start in your journey to learn about Vert.x.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://vertx.io/&#34;&gt;Go to the Vert.x website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.packtpub.com/development-of-asynchronous-network-applications-using-vertx/book&#34;&gt;Get the book at Pack Publishing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Use backspace key to go back in Google Chrome</title>
      <link>http://mpas.github.io/post/2013/05/backspace-mint</link>
      <pubDate>Thu, 30 May 2013 00:00:00 UTC</pubDate>
      
      <guid>http://mpas.github.io/post/2013/05/backspace-mint</guid>
      <description>&lt;p&gt;When using Chrome (in Linux Mint) and pressing the backspace key nothing happens. You would expect to go back to the previous url you have visited. To enable the default behaviour you could install the following extension:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://chrome.google.com/webstore/detail/backspace-as-backforward/aeffggjddcchloadflonilaahpclmbnm?hl=en&#34;&gt;https://chrome.google.com/webstore/detail/backspace-as-backforward/aeffggjddcchloadflonilaahpclmbnm?hl=en&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Automount NTFS volume under Linux (Mint)</title>
      <link>http://mpas.github.io/post/2013/05/automount-ntfs-mint</link>
      <pubDate>Tue, 28 May 2013 00:00:00 UTC</pubDate>
      
      <guid>http://mpas.github.io/post/2013/05/automount-ntfs-mint</guid>
      <description>&lt;p&gt;When automounting an NTFS volume under Linux (Mint) you can do this using the /etc/fstab file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo pico /etc/fstab
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add a line in the /etc/fstab file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# custom mount point
/dev/sdb1 /media/windows-c ntfs-3g defaults 0 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And take the mount into effect.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mount -a
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Using Grails to power your Electric Car</title>
      <link>http://mpas.github.io/post/2013/05/grails-to-power-your-electric-car</link>
      <pubDate>Sat, 25 May 2013 00:00:00 UTC</pubDate>
      
      <guid>http://mpas.github.io/post/2013/05/grails-to-power-your-electric-car</guid>
      <description>&lt;p&gt;Past week I really enjoyed visiting &amp;amp; speaking at the &lt;a href=&#34;http://gr8conf.org/&#34;&gt;Grails Conference (GR8Conf 2013)&lt;/a&gt;. The organisation made it possible that for me to host a talk about &amp;ldquo;Using Grails to power your Electric Car&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.slideshare.net/mpas/20130523-gr8conf-using-grails-to-power-your-electric-car&#34;&gt;Using Grails to power your Electric Car&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Google Chrome not synchronizing extensions</title>
      <link>http://mpas.github.io/post/2013/05/chrome-not-synchronizing-extensions</link>
      <pubDate>Fri, 24 May 2013 00:00:00 UTC</pubDate>
      
      <guid>http://mpas.github.io/post/2013/05/chrome-not-synchronizing-extensions</guid>
      <description>&lt;p&gt;When installing a fresh version of Chrome it may occur that all Bookmarks sync ok but the extensions not. The following solution worked for my system.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open Google Chrome&lt;/li&gt;
&lt;li&gt;Goto &amp;ldquo;Settings&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Open &amp;ldquo;Advanced Settings&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Check &amp;ldquo;Developer mode&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Press &amp;ldquo;Update extensions now&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Simple Helloworld verticle</title>
      <link>http://mpas.github.io/post/2013/05/simple-helloworld-verticle</link>
      <pubDate>Thu, 16 May 2013 00:00:00 UTC</pubDate>
      
      <guid>http://mpas.github.io/post/2013/05/simple-helloworld-verticle</guid>
      <description>&lt;p&gt;Sourcecode:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package helloworld;

import org.vertx.java.core.Handler;
import org.vertx.java.core.http.HttpServerRequest;
import org.vertx.java.deploy.Verticle;

public class Server extends Verticle {

    public void start() {
        vertx.createHttpServer().requestHandler(new Handler&amp;lt;HttpServerRequest&amp;gt;() {
            public void handle(HttpServerRequest req) {
            req.response.headers().put(&amp;quot;Content-Type&amp;quot;, &amp;quot;text/html; charset-UTF-8&amp;quot;);
            req.response.end(&amp;quot;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Hello from vert.x!&amp;lt;/h1&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;quot;);
            }
        }).listen(8080);
    }

}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Grails migrations and &#39;Waiting for changelog lock&#39;</title>
      <link>http://mpas.github.io/post/2013/02/grails-migrations-and-waiting-for-changelog</link>
      <pubDate>Thu, 28 Feb 2013 00:00:00 UTC</pubDate>
      
      <guid>http://mpas.github.io/post/2013/02/grails-migrations-and-waiting-for-changelog</guid>
      <description>&lt;p&gt;Sometimes it may happen that the automatic migrations in a Grails project may come to a hold due to the fact that Liquibase keeps waiting for a changelog lock. At the end this will result in a application that is not going to be deployed.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;...
Waiting for changelog lock....
Waiting for changelog lock....
Waiting for changelog lock....
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To solve this take the following steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Stop the application container (example: Tomcat)&lt;/li&gt;
&lt;li&gt;In the database look for a table called &lt;code&gt;DATABASECHANGELOGLOCK&lt;/code&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;In the table there is a record with id=1, change the following values:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;locked -&amp;gt; 0
lockgranted -&amp;gt; null
lockedby -&amp;gt; null
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;After updating this record start the application container&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;br /&gt;
To see who has locked the database (normally the local machine):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;select * from DATABASECHANGELOGLOCK;
To update the record
update DATABASECHANGELOGLOCK 
set locked=0, lockgranted=null, lockedby=null 
where id=1
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Testing constraints with Build Test Data</title>
      <link>http://mpas.github.io/post/2013/01/testing-constraints-with-build-test-data</link>
      <pubDate>Sun, 13 Jan 2013 00:00:00 UTC</pubDate>
      
      <guid>http://mpas.github.io/post/2013/01/testing-constraints-with-build-test-data</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;http://grails.org/plugin/spock&#34;&gt;Spock&lt;/a&gt; &amp;amp; &lt;a href=&#34;http://grails.org/plugin/build-test-data&#34;&gt;Build Test Data&lt;/a&gt; plugins both are wonderful additions to your toolkit if you are creating tests without getting into the hassle of constantly building up your object graph. You can focus on what you want to test!&lt;/p&gt;

&lt;p&gt;When testing constraints on an object it can be used as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Foo {
    String name   // name of foo
    Integer age   // age of foo

    static constraints = {
     name nullable: false, blank: false // name may never be nullable or blank
     age nullable: true
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And the Spock test&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Build(Foo)
@TestFor(Foo)
class FooSpec extends Specification {

    def &amp;quot;Name of Foo must exist&amp;quot;() {
        given: &amp;quot;setting up the constraints&amp;quot;
        mockForConstraintsTests(Foo)

        when: &amp;quot;creating a Foo&amp;quot;
        Foo foo = Foo.buildWithoutSave()

        then: &amp;quot;validation should trigger&amp;quot;
        assertFalse foo.validate()

        and: &amp;quot;validation error should be on the value field&amp;quot;
        assert foo.errors.allErrors.first().field == &amp;quot;name&amp;quot;
    }

}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Getting the Enum from a String value</title>
      <link>http://mpas.github.io/post/2013/01/getting-enum-from-string-value</link>
      <pubDate>Thu, 03 Jan 2013 00:00:00 UTC</pubDate>
      
      <guid>http://mpas.github.io/post/2013/01/getting-enum-from-string-value</guid>
      <description>&lt;p&gt;Ever asked yourself the question how you could get the Enum from a String value? This is particularly usefull when you use Enum values in your screens and pass back the value of the enum!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Enum.valueOf(YourClassName.class, &amp;quot;String Value&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.oracle.com/javase/6/docs/api/java/lang/Enum.html&#34;&gt;http://docs.oracle.com/javase/6/docs/api/java/lang/Enum.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Troubles getting vsftpd user logged in?</title>
      <link>http://mpas.github.io/post/2012/09/troubles-getting-vsftpd-user-logged-in</link>
      <pubDate>Tue, 18 Sep 2012 00:00:00 UTC</pubDate>
      
      <guid>http://mpas.github.io/post/2012/09/troubles-getting-vsftpd-user-logged-in</guid>
      <description>&lt;p&gt;Recently i had the pleasure of installing and using vsftp on a Ubuntu Linux 12.04 system. I closely followed the instructions but keeped getting my head banging against a wall with an error message:
500 OOPS: vsftpd: refusing to run with writable root inside chroot()&lt;/p&gt;

&lt;p&gt;After some googling around i found the following fix..
chmod the folder that the ftp user comes in to as he first login (root folder) by using in terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo chmod a-w /home/user
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a subfolder within the folder, either by the use of GUI or if you only have terminal it&amp;rsquo;s:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mkdir /home/user/newfolder
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you should be able to log in and read write within the &amp;ldquo;newfolder&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;You will &lt;strong&gt;NOT&lt;/strong&gt; be able to write in the root folder itself from the ftp with the chmod a-w, so that is the reason for the subfolder, there you can.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://askubuntu.com/questions/128180/vsftpd-stopped-working-after-update&#34;&gt;http://askubuntu.com/questions/128180/vsftpd-stopped-working-after-update&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Loading Grails configuration files update!</title>
      <link>http://mpas.github.io/post/2012/09/grails-load-external-configuration-files-update</link>
      <pubDate>Mon, 17 Sep 2012 00:00:00 UTC</pubDate>
      
      <guid>http://mpas.github.io/post/2012/09/grails-load-external-configuration-files-update</guid>
      <description>&lt;p&gt;We recently changed the way how we load configuration files in a Grails project. Normally we to use the .properties file format, but this has some serious disadvantages.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You cannot deal with all Grails Mail settings in the configuration file&lt;/li&gt;
&lt;li&gt;You cannot use the log4j DSL to extract the logging configuration outside your application&lt;/li&gt;
&lt;li&gt;etc..&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In our hunt for a good way to load configuration files we asked question on the mailinglist and also found this &lt;a href=&#34;http://www.baselogic.com/blog/development/java-javaee-j2ee/getting-grails-external-configuration-working-in-the-real-world/&#34;&gt;blogpost&lt;/a&gt; which was the start for our implementation of loading the external configuration files.&lt;/p&gt;

&lt;p&gt;We modified some small things and added a way of loading a configuration file that is resident in the root of a Grails project. So when developing with IntelliJ for example the config file is at your fingertips in the root of the application project structure. We must also note that we are very happy with the fact that the Grails community was more then helpfull in helping us out here!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// -------------------------------------------------------------------------------- //
// - START: CONFIGURATION FILE LOADING -------------------------------------------- //
// -------------------------------------------------------------------------------- //
// locations to search for config files that get merged into the main config
// config files can either be Java properties files or ConfigSlurper scripts
def ENV_NAME = &amp;quot;${appName}.config.location&amp;quot;
if(!grails.config.locations || !(grails.config.locations instanceof List)) {
    grails.config.locations = []
}
println &amp;quot;--------------------------------------------------------------------------------&amp;quot;
println &amp;quot;- Loading configuration file                                                   -&amp;quot;
println &amp;quot;--------------------------------------------------------------------------------&amp;quot;
// 1: check for environment variable that has been set! This variable must point to the
// configuration file that must be used. Can be a .groovy or .properties file!
if(System.getenv(ENV_NAME) &amp;amp;&amp;amp; new File(System.getenv(ENV_NAME)).exists()) {
    println(&amp;quot;Including System Environment configuration file: &amp;quot; + System.getenv(ENV_NAME))
    grails.config.locations &amp;lt;&amp;lt; &amp;quot;file:&amp;quot; + System.getenv(ENV_NAME)

// 2: check for commandline properties!
// Use it like (examples):
//      grails -D[name of app].config.location=/tmp/[name of config file].groovy run-app
// or
//      grails -D[name of app].config.location=/tmp/[name of config file].properties run-app
//
} else if(System.getProperty(ENV_NAME) &amp;amp;&amp;amp; new File(System.getProperty(ENV_NAME)).exists()) {
    println &amp;quot;Including configuration file specified on command line: &amp;quot; + System.getProperty(ENV_NAME)
    grails.config.locations &amp;lt;&amp;lt; &amp;quot;file:&amp;quot; + System.getProperty(ENV_NAME)

// 3: check on local project config file in the project root directory
} else if (new File(&amp;quot;./${appName}-config.groovy&amp;quot;).exists()) {
    println &amp;quot;*** User defined config: file:./${appName}-config.groovy ***&amp;quot;
    grails.config.locations = [&amp;quot;file:./${appName}-config.groovy&amp;quot;]
} else if (new File(&amp;quot;./${appName}-config.properties&amp;quot;).exists()) {
    println &amp;quot;*** User defined config: file:./${appName}-config.properties ***&amp;quot;
    grails.config.locations = [&amp;quot;file:./${appName}-config.groovy&amp;quot;]

// 4: check on local project config file in ${userHome}/.grails/...
} else if (new File(&amp;quot;${userHome}/.grails/${appName}-config.groovy&amp;quot;).exists()) {
    println &amp;quot;*** User defined config: file:${userHome}/.grails/${appName}-config.groovy ***&amp;quot;
    grails.config.locations = [&amp;quot;file:${userHome}/.grails/${appName}-config.groovy&amp;quot;]
} else if (new File(&amp;quot;${userHome}/.grails/${appName}-config.properties&amp;quot;).exists()) {
    println &amp;quot;*** User defined config: file:${userHome}/.grails/${appName}-config.properties ***&amp;quot;
    grails.config.locations = [&amp;quot;file:${userHome}/.grails/${appName}-config.properties&amp;quot;]

// 5: we have problem!!
} else {
    println &amp;quot;********************************************************************************&amp;quot;
    println &amp;quot;* No external configuration file defined                                       *&amp;quot;
    println &amp;quot;********************************************************************************&amp;quot;
}
println &amp;quot;(*) grails.config.locations = ${grails.config.locations}&amp;quot;
println &amp;quot;--------------------------------------------------------------------------------&amp;quot;
// -------------------------------------------------------------------------------- //
// - END: CONFIGURATION FILE LOADING ---------------------------------------------- //
// -------------------------------------------------------------------------------- //
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>